version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/ruby:2.5.1-node-browsers
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_PATH: vendor/bundle
        BUNDLE_RETRY: 3
        CBO_BASE_DATABASE_DATABASE: cccd_test
        PDFTK_PATH: /usr/bin/pdftk
        PGHOST: 127.0.0.1
        PGUSER: postgres
        RAILS_ENV: test
        TZ: Europe/London
    - image: circleci/postgres:9.3-alpine
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: cccd_test
        POSTGRES_PASSWORD: ""

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory

      - run:
          name: Setup Code Climate test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - cccd-{{ checksum "Gemfile.lock" }}
            - cccd-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: cccd-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - persist_to_workspace:
          root: .
          paths:
            - vendor/bundle

  rubocop:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory

      - attach_workspace:
          at: ~/repo/

      - attach_workspace:
          at: ~/repo/tmp

      - run:
          name: Run Rubocop
          command: bundle exec rubocop
  rspec-tests:
    <<: *defaults
    parallelism: 2
    steps:
      - checkout # special step to check out source code to working directory

      - attach_workspace:
          at: ~/repo/

      - attach_workspace:
          at: ~/repo/tmp

     # Install dependencies
      - run:
          name: Install dependencies
          command: sudo apt-get install -y pdftk

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
      - run:
          name: Run rspec tests
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.backend.json
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.backend.json
  cucumber-tests:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory

      - attach_workspace:
          at: ~/repo/

      - attach_workspace:
          at: ~/repo/tmp

     # Install dependencies
      - run:
          name: Install dependencies
          command: sudo apt-get install -y pdftk

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run cucumber tests
          command: bundle exec cucumber
  jasmine-tests:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory

      - attach_workspace:
          at: ~/repo/

      - attach_workspace:
          at: ~/repo/tmp

      - run:
          name: Run jasmine tests
          command: bundle exec rake jasmine:ci
  upload-coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.backend.json
  build-artifact:
    <<: *defaults
    environment:
      DOCKER_REGISTRY: registry.service.dsd.io
      APP_NAME: advocatedefencepayments
    type: approval
    steps:
      - checkout # special step to check out source code to working directory

      - run:
          name: Test docker registry availability
          command: curl -f https://$DOCKER_REGISTRY/v1/_ping || { echo -e "\nDocker registry is down!"; exit 1; }

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build docker image
          command: docker build --pull -t $DOCKER_REGISTRY/$APP_NAME -f docker/Dockerfile .

workflows:
  version: 2
  commit:
    jobs:
      # - setup
      # - rubocop:
      #     requires:
      #       - setup
      # - rspec-tests:
      #     requires:
      #       - setup
      # - cucumber-tests:
      #     requires:
      #       - setup
      # - jasmine-tests:
      #     requires:
      #       - setup
      # - upload-coverage:
      #     requires:
      #       - rubocop
      #       - rspec-tests
      #       - cucumber-tests
      #       - jasmine-tests
      - build-artifact
