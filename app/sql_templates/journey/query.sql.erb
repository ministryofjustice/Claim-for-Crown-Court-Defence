SELECT
  c.*,
  c2.scheme as scheme,
  p.name as organisation,
  coalesce(ct.name, ct2.name) as case_type_name,
  c2.scheme || ' ' || c2.sub_type as bill_type,
  round(c.total + c.vat_amount, 4) as claim_total,
  c.last_submitted_at at time zone 'utc' at time zone 'Europe/London' as last_submitted_at,
  c.original_submission_date at time zone 'utc' at time zone 'Europe/London' as originally_submitted_at,
  main_defendant.name as main_defendant,
  earliest_representation_order.maat_reference as maat_reference,
  earliest_representation_order.representation_order_date as rep_order_issued_date,
  previous_redetermined_decision.author_name as af1_lf1_processed_by,
  misc_fees.descriptions as misc_fees,
  j.journey as journey
FROM claims c
LEFT OUTER JOIN external_users AS creator
  ON c.creator_id = creator.id
LEFT OUTER JOIN providers AS p
  ON p.id = creator.provider_id
LEFT OUTER JOIN case_types AS ct
  ON ct.id = c.case_type_id
LEFT OUTER JOIN case_stages cs
  ON cs.id = c.case_stage_id
LEFT OUTER JOIN case_types AS ct2
  ON ct2.id = cs.case_type_id
LEFT JOIN LATERAL journeys(c.id) j
  ON TRUE
LEFT JOIN LATERAL (
  select
    case
      when type in <%= @in_agfs_claim_types %> then 'AGFS'
      when type in <%= @in_lgfs_claim_types %> then 'LGFS'
      else 'Unknown'
    end as scheme,
    case
      when regexp_replace(type, 'Claim|::|Advocate|Litigator|\s+', '', 'g') = '' then 'Final'
      else regexp_replace(type, 'Claim|::|Advocate|Litigator|\s+', '', 'g')
    end as sub_type
  from claims
  where id = c.id
) c2 ON TRUE
LEFT JOIN LATERAL (
  select first_name || ' ' || last_name as name
  from defendants
  where claim_id = c.id
  fetch first row only
) main_defendant ON TRUE
LEFT JOIN LATERAL (
  select maat_reference,
         representation_order_date
  from representation_orders r, defendants d2
  where d2.claim_id = c.id
    and r.defendant_id = d2.id
  order by r.representation_order_date, r.created_at asc
  fetch first row only
) earliest_representation_order ON TRUE
LEFT JOIN LATERAL (
  select transitions ->> 'author_name' as author_name
  from journeys(c.id) j2,
       jsonb_array_elements(j2.journey) transitions
  where j.journey -> 0 ->> 'to' = 'redetermination'
    and transitions ->> 'to' = j.journey -> 0 ->> 'from'
    and (transitions ->> 'created_at')::timestamp < (j.journey -> 0 ->> 'created_at')::timestamp
  order by (transitions ->> 'created_at')::timestamp desc
  fetch first row only
) previous_redetermined_decision ON TRUE
LEFT JOIN LATERAL (
  select string_agg(ft.description, ' ' order by f.id) as descriptions
  from fees f, fee_types ft
  where f.claim_id = c.id
    and f.fee_type_id = ft.id
    and ft.type = 'Fee::MiscFeeType'
  group by f.claim_id
) misc_fees ON TRUE
WHERE c.deleted_at IS NULL
  AND c.state != 'draft'
  AND c.type IN <%= @claim_type_filter %>
  AND j.journey::text <> '[]'
