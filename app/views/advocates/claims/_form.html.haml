#claim-form
  = form_for [:advocates, @claim], builder: AdpFormBuilder, html: { novalidate: true }, multipart: true, authenticity_token: true do |f|

    = f.hidden_field :form_id, value: @form_id || params[:claim][:form_id]

    - if @claim.errors.any?
      .validation-summary
        %h2.heading-small= "#{t('.prohibited_save')} #{pluralize(@claim.errors.count, t('.error'))}"
        %ul
          - @claim.errors.full_messages.each do |message|
            %li
              = message
        %span.form-hint
          = t('.form_error_hint')
    %fieldset
      %legend.bold-medium
        = t('.case_advocate_offence')

      - if current_user.persona.admin?
        .grid-row
          .column-half
            = f.label t('.advocate')
            = f.collection_select :advocate_id, @advocates_in_chamber, :id, :name_and_number, {prompt: true}, {class: 'select2'}
            = validation_error_message(@claim, :advocate)
          .column-half
            = f.label t('.advocate_category')
            = f.collection_select :advocate_category, Settings.advocate_categories, :to_s, :to_s, { prompt: true }, { class: 'select2', style:'width:200px' }
            = validation_error_message(@claim, :advocate_category)
      - else
        = f.label t('.advocate_category')
        = f.collection_select :advocate_category, Settings.advocate_categories, :to_s, :to_s, { prompt: true }, { class: 'select2', style:'width:200px' }
        = validation_error_message(@claim, :advocate_category)

      = f.label t('.court')
      = f.collection_select :court_id, Court.all, :id, :name, { prompt: true }, { class: 'select2', style:'width:300px' }
      = validation_error_message(@claim, :court)

      .grid-row
        .column-half
          = f.label t('.case_type')
          = f.collection_select2_with_data :case_type_id, @case_types, :id, :name, {'is-fixed-fee' => :is_fixed_fee?}, { prompt: true }
          = validation_error_message(@claim, :case_type_id)
        .column-half
          = f.label t('.case_number')
          = f.text_field :case_number
          = validation_error_message(@claim, :case_number)

      = render 'cracked_trial_fields', f: f

      .grid-row
        .column-half
          = f.label t('.offence_category')
          - if @claim.new_record?
            - selected_offence_category = params[:offence_category].present? ? params[:offence_category][:description] : nil
          - else
            - selected_offence_category = @claim.offence.description rescue nil
          = collection_select :offence_category, :description, @offence_descriptions, :description, :description, { prompt:  t('.select_category'), selected: selected_offence_category }, {  class: 'select2' }
          = validation_error_message(@claim, :offence)
        .column-half
          .offence-class-select
            = render partial: "offence_select", locals: { offences: @offences }

          = f.hidden_field :offence_id, value: f.object.offence ? f.object.offence.id : nil



      #trial-details
        %span.auto-width
          = f.label t('.first_day_of_trial')
          = f.gov_uk_date_field :first_day_of_trial
          = validation_error_message(@claim, :first_day_of_trial)
        %span.auto-width
          = f.label t('.estimated_length')
          = f.number_field :estimated_trial_length, step: 1, min: 0
          = validation_error_message(@claim, :estimated_trial_length)
        %span.auto-width
          = f.label t('.actual_length')
          = f.number_field :actual_trial_length, step: 1, min: 0
          = validation_error_message(@claim, :actual_trial_length)
        %span.auto-width
          = f.label t('.trial_concluded_at')
          = f.gov_uk_date_field :trial_concluded_at
          = validation_error_message(@claim, :trial_concluded_at)

    %fieldset
      %legend.bold-medium
        = t('.defendants')
      #defendants
        = f.fields_for :defendants do |defendant|
          = render 'defendant_fields', f: defendant
        %div
          = link_to_add_association t('.add_another_defendant'), f, :defendants, class: 'button-secondary'

    %fieldset
      %legend.bold-medium
        = t('.basic_fees')
      #basic-fees
        %p
          = raw t('.fee_prompt_text')

        %table
          %thead
            %tr
              %th
                = t('.fee_type')
              %th
                = t('.quantity')
              %th
                = t('.amount') 
              %th
            = f.fields_for :basic_fees do |basic_fee_fields|
              = render 'basic_fee_fields', f: basic_fee_fields

    %fieldset
      %legend.bold-medium
        = t('.misc_fees')
      #misc-fees
        %table
          %thead
            %tr
              %th
                = t('.fee_type')
              %th
                = t('.quantity')
              %th
                = t('.amount')
              %th
              %th
          = f.fields_for :misc_fees do |misc_fee_fields|
            = render 'misc_fee_fields', f: misc_fee_fields

        = link_to_add_association t('.add_misc_fee'), f, :misc_fees, data: {'association-insertion-method' => 'append', 'association-insertion-traversal' => 'prev', 'association-insertion-node' => 'table'}

    %fieldset
      %legend.bold-medium
        = t('.fixed_fees')
      #fixed-fees
        %table
          %thead
            %tr
              %th
                = t('.fee_type')
              %th
                = t('.quantity')
              %th
                = t('.amount')
              %th
              %th
          = f.fields_for :fixed_fees do |fixed_fee_fields|
            = render 'fixed_fee_fields', f: fixed_fee_fields

        = link_to_add_association t('.add_fixed_fee'), f, :fixed_fees, data: {'association-insertion-method' => 'append', 'association-insertion-traversal' => 'prev', 'association-insertion-node' => 'table'}

    %fieldset
      %legend.bold-medium
        = t('.expenses')
      %span.form-hint.xsmall
        = t('.expenses_help_text')
      #expenses
        %table
          %thead
            %tr
              %th
                = t('.expense_type')
              %th
                = t('.location')
              %th
                = t('.quantity_hours')
              %th
                = t('.rate')
              %th
                = t('.amount') 
              %th
              %th
              = f.fields_for :expenses do |expense|
                = render 'expense_fields', f: expense

        = link_to_add_association t('.add_another_expense'), f, :expenses, data: {'association-insertion-method' => 'append', 'association-insertion-traversal' => 'prev', 'association-insertion-node' => 'table'}

      %label
        = f.check_box :apply_vat
        = t('.vat_required')
      = validation_error_message(@claim, :apply_vat)

    = render partial: "shared/vat_summary", locals: { claim:  present(@claim) }

    %fieldset{id: 'evidence'}
      %legend.bold-medium
        = t('.supporting_evidence_docs')

      .document-ids
        - @claim.documents.each do |document|
          = f.hidden_field :document_ids, multiple: true, value: document.id, id: "claim_document_ids_#{document.id}"

      %div{class: 'dropzone', data: {'dz-template' => render('shared/dropzone_js')}}
        %div.dz-default.dz-message.grid-row
          .column-third
            &nbsp;
          .column-third.drag-helptext
            %span.normal="Drag and drop files here"
            %br
            %span.bold-normal= "or"
            %br
            %div.button-secondary
              = t('.choose_file')
          .column-third
            &nbsp;

      - if @claim.documents.count > 0
        %legend
          = t('.previously_uploaded_docs')

          %table.previously-uploaded
            %thead
              %th
                = t('.file_name')
              %th
                = t('.action')
            %tbody
              - @claim.documents.order(created_at: :asc).each do |document|
                %tr{id: dom_id(document)}
                  %td
                    = document.document_file_name
                  %td
                    = link_to t('common.download'), download_document_path(document), class: 'download'
                    = " | "
                    = link_to t('common.remove'), document_path(document), method: :delete, remote: true, data: { confirm: 'Are you sure?' }


    %fieldset{id: 'evidence-checklist'}
      %legend
        = t('.supporting_evidence_checklist')
      #evidence-checklist
        = render 'evidence_checklist', f: f

    %fieldset
      %legend.bold-medium
        = t('.additional_information')
      .grid-row
        .column-half
          = f.text_area :additional_information, rows: 7
          = validation_error_message(@claim, :additional_information)
        .column-half
          &nbsp;
    %p
      = f.submit t('.submit_to_laa'), class: 'button left'
      - if @claim.draft?
        = f.submit t('.save_to_drafts'), class: 'button button-secondary left'
      = link_to t('.clear_form'), new_advocates_claim_path, class: 'button button-secondary right', data: { confirm: 'Are you sure you want to clear this form?' }
