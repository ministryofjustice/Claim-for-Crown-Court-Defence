= render partial: 'errors/error_summary', locals:{ ep: @allocation, error_summary: 'This claim allocation has '}


.notice-summary{role: "group", "aria-labelledby": "notice-summary-heading", tabindex:"-1", style: "display: none;"}
  %h1.heading-medium.notice-summary-heading{id: "notice-summary-heading"}
    %span.msg

.error-summary{role: "group", "aria-labelledby": "error-summary-heading", tabindex: "-1", style: "display: none;"}
  %h1#error-summary-heading.heading-medium.error-summary-heading
    %span.msg

.grid-row#api-key{:data => {api_key: current_user.api_key}}
  .column-two-thirds
    = render partial: 'layouts/header', locals: {page_heading: 'Allocation'}
  .column-one-third.scheme-filters
    -# FORM
    -# AGFS / LGFS Radios
    = render partial: 'scheme_filters'

= form_tag case_workers_admin_allocations_path, method: :get do
  = hidden_field_tag :tab, params[:tab]
  = form_for [:case_workers, :admin, @allocation] do |f|
    = hidden_field_tag :tab, params[:tab]
    = hidden_field_tag :scheme, params[:scheme]
    = hidden_field_tag :filter, params[:filter] if params[:filter]
    = hidden_field_tag :page, params[:page]
    = hidden_field_tag :value_band_id, params[:value_band_id] if params[:value_band_id]

    .grid-row.js-typeahead
      %h2.heading-medium
        = "Allocate claims"
      .form-row.form-group.js-typeahead
        .form-col
          = label_tag :quantity_to_allocate, t('.no_of_claims')
          = number_field_tag :quantity_to_allocate, nil, { style: 'width:100%', min: 0, size: 5, class: 'form-control'}
        .form-col
          = f.label :case_worker_id, t('dictionary.models.case_worker'), {for: "allocation_case_worker_id_autocomplete"}
          = f.collection_select :case_worker_id, @case_workers, :id, :name, { include_blank: ''.html_safe }, { class: 'form-control typeahead' }

        .form-col{ style: 'padding: 26px 0 0' }
          = f.submit 'Allocate', class: 'button allocation-submit'


    %h2.heading-medium
      = "Filter claims"
    .form-row.form-group
      .form-col.ui-filter
        = render partial: 'filter_tasks'

      .form-col.ui-filter
        = render partial: 'filter_value_bands'

      .form-col{ style: 'padding: 21px 0 0' }
        %button.clear-filters.button.button-secondary{:type => 'button'}
          Clear filters

    %h2.heading-medium
      = "Allocation queue"
    %table#dtAllocation
      %thead
        %tr
          %th

          %th
            = "Case #"
          %th
            = "Court"
          %th
            = "Defendents"
          %th
            = "Type"
          %th
            = "Submitted"
          %th
            = "Total"
