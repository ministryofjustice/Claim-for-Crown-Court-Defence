= render partial: 'layouts/header', locals: { page_heading: t('.page_heading') }

.govuk-grid-row
  .govuk-grid-column-full

    .govuk-grid-row
      .govuk-grid-column-two-thirds
        = govuk_error_summary(@allocation, :allocation)

    = form_with url: case_workers_admin_allocations_path, method: :get do |f|
      = render partial: 'orig_scheme_filters', locals: { f: f }

      = render partial: 'shared/search_form', locals: { search_path: case_workers_admin_allocations_path(anchor: 'search-button'), hint_text: t('hint.search'), button_text: t('search.claims') }

    = form_with model: [:case_workers, :admin, @allocation] do |f|
      = hidden_field_tag :scheme, params[:scheme]
      = hidden_field_tag :page, params[:page]

      .govuk-grid-row
        .govuk-grid-column-two-thirds
          = f.govuk_radio_buttons_fieldset :deallocate, legend: { text: t('.legend'), size: 'm' }, hint: { text: t('.form_hint_html') } do
            = f.govuk_radio_button :deallocate, 'true', label: { text: t('.allocation_pool') }, link_errors: true
            = f.govuk_radio_button :deallocate, 'false', label: { text: t('.case_worker') } do
              #cc-caseworker.fx-autocomplete-wrapper
                = f.govuk_select :case_worker_id, label: { text: t('.case_worker_name') } do
                  = options_for_select [['', '']]
                  = options_from_collection_for_select @case_workers, :id, :name

          = f.govuk_submit t('.re_allocate'), name: 'tab', value: 'allocated'

      - if @claims.any?
        = govuk_table(classes: 'app-table--responsive js-checkbox-table') do |table|
          = table.with_caption(size: 's', html_attributes: { id: 'allocation-claim-ids-field-error' } ) do
            .govuk-grid-row
              .govuk-grid-column-one-half
                = t('.re_allocation')
              .govuk-grid-column-one-half.claim-count{ class: 'govuk-!-text-align-right' }
                = pagy_info(@pagy).html_safe

          = table.with_head do |head|
            = head.with_row do |row|
              = row.with_cell do
                = govuk_link_to t('.select_all'), '#', class: 'select-all', data: { 'all-checked': 'false' }, 'aria-label': t('.select_all_label')
              = row.with_cell(text: t('.case_number'))
              = row.with_cell(text: t('.court'))
              = row.with_cell(text: t('.defendants'))
              = row.with_cell(text: t('.type'))
              = row.with_cell(text: t('.submitted_date'), numeric: true)
              = row.with_cell(text: t('.claim_total'), numeric: true)
              - if params[:tab] == 'allocated'
                = row.with_cell(text: t('.allocated_to'))

          = table.with_body do |body|
            = collection_check_boxes :allocation, :claim_ids, @claims, :id, :case_number do |b|
              - present(b.object) do |claim|
                = body.with_row(html_attributes: { id: dom_id(claim) }) do |row|
                  = row.with_cell(html_attributes: { 'data-label': t('.select') }) do
                    .govuk-checkboxes.govuk-checkboxes--small{ 'data-module': 'govuk-checkboxes' }
                      .govuk-checkboxes__item
                        = b.check_box(class: 'govuk-checkboxes__input')
                        = b.label(class: 'govuk-label govuk-checkboxes__label'){ t('.choose_label_html', case_number: claim.case_number) }

                  = row.with_cell(html_attributes: { 'data-label': t('.case_number') }) do
                    %span.js-test-case-number
                      = govuk_link_to claim.case_number, case_workers_claim_path(claim), 'aria-label': t('.case_number_label', case_number: claim.case_number)
                      %span.unique-id-small
                        = claim.unique_id
                      = render partial: 'case_workers/injection_errors', locals: { claim: claim }

                  = row.with_cell(html_attributes: { 'data-label': t('.court') }, text: claim.court.name)
                  = row.with_cell(html_attributes: { 'data-label': t('.defendants') }, text: claim.defendant_names)
                  = row.with_cell(html_attributes: { 'data-label': t('.type') }) do
                    = claim.case_type_name
                    %br/
                    %span.claim-state
                      = claim.claim_state

                  = row.with_cell(html_attributes: { 'data-label': t('.submitted_date') }, text: claim.submitted_at_short)
                  = row.with_cell(html_attributes: { 'data-label': t('.claim_total') }, text: claim.total_inc_vat)

                  - if params[:tab] == 'allocated'
                    = row.with_cell(html_attributes: { 'data-label': t('.allocated_to') }, text: claim.case_workers.map(&:name).join(', '))

      - else
        %p.govuk-body{ class: 'govuk-!-font-weight-bold' }
          = t('.no_claims_allocated')
