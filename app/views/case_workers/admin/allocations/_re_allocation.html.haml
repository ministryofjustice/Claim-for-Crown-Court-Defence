= content_for :v2_stylesheets do
  = stylesheet_link_tag 'v2/application', media: 'all'

= render partial: 'errors/error_summary', locals: { ep: @allocation, error_summary: t('.error_summary') }

.grid-row
  .column-full
    = render partial: 'layouts/header', locals: { page_heading: t('.page_heading') }

.grid-row
  .column-full
    = form_tag case_workers_admin_allocations_path, method: :get do
      = render partial: 'orig_scheme_filters'

      %noscript
        = submit_tag t('.filter')

      .search-wrapper
        = render partial: 'shared/search_form', locals: { search_path: case_workers_admin_allocations_path(anchor: 'listanchor'), hint_text: t('hint.search'), button_text: t('search.claims') }

    = form_for [:case_workers, :admin, @allocation] do |f|
      = hidden_field_tag :tab, params[:tab]
      = hidden_field_tag :scheme, params[:scheme]
      = hidden_field_tag :page, params[:page]

      %fieldset.inline
        %legend.normal.form-label-bold
          = t('.legend')

        .form-group
          .form-hint
            = t('.form_hint_html')

          .js-re-allocation-options
            .multiple-choice
              = f.radio_button :deallocate, true, checked: false, value: true
              = f.label :deallocate, t('.allocation_pool'), 'aria-label': t('.allocation_pool_label'), value: true

            .multiple-choice
              = f.radio_button :deallocate, false, checked: true, value: false
              = f.label :deallocate, t('.case_worker'), 'aria-label': t('.case_worker_label'), value: false

      .case-worker-reallocation.grid-row.form-group.js-typeahead
        .column-one-quarter.js-case-worker-list
          = f.label :case_worker_id, class: 'form-label-bold'
          = f.collection_select :case_worker_id, @case_workers, :id, :name, { include_blank: ''.html_safe }, { class: 'form-control fx-autocomplete', style: 'width: 100%;', 'aria-label': t('case_workers.admin.allocations.re_allocation.case_worker') }
        .column-half.margin-spacer-sm
          %br/
          = f.submit t('.re_allocate'), class: 'button'

      - if @claims.any?
        .container.table-container
          %table.report.js-checkbox-table.js-reallocation-report
            %caption
              %span.table-caption
                = t('.re_allocation')
              %span.claim-count
                = t('.number_of_claims')
                = @claims.total_count

            %thead
              %th.select{ scope: 'col' }
                = link_to t('.select_all'), '#', class: 'select-all', data: { 'all-checked': 'false' }, 'aria-label': t('.select_all_label')
              %th.case-number{ scope: 'col' }
                = t('.case_number')
              %th.court{ scope: 'col' }
                = t('.court')
              %th{ scope: 'col' }
                = t('.defendants')
              %th.type{ scope: 'col' }
                = t('.type')
              %th.numeric.submit-date{ scope: 'col' }
                = t('.submitted_date')
              %th.numeric.claim-total{ scope: 'col' }
                = t('.claim_total')
              - if params[:tab] == 'allocated'
                %th{ scope: 'col' }
                  = t('.allocated_to')

            %tbody
              = collection_check_boxes :allocation, :claim_ids, @claims, :id, :case_number do |b|
                - present(b.object) do |claim|
                  %tr{ id: dom_id(claim), class: claim.injection_error ? 'error injection-error' : nil }
                    %td{ 'data-label': t('.select') }
                      .error-message-container
                        = b.label(class: 'visuallyhidden') { t('.choose_label', case_number: claim.case_number) }
                        = b.check_box
                        - claim.injection_error do |message|
                          .error-message
                            = message
                    %td{ 'data-label': t('.case_number') }
                      %span.js-test-case-number
                        = link_to claim.case_number, case_workers_claim_path(claim), 'aria-label': t('.case_number_label', case_number: claim.case_number)
                        %span.unique-id-small
                          = claim.unique_id
                        - if claim.disk_evidence == true
                          %span.disk-evidence
                            = t('.disk_evidence')
                    %td{ 'data-label': t('.court') }
                      = claim.court.name
                    %td{ 'data-label': t('.defendants') }
                      = claim.defendant_names
                    %td{ 'data-label': t('.type') }
                      = claim.case_type_name
                      %br/
                      %span.claim-state
                        = claim.claim_state
                    %td.numeric{ 'data-label': t('.submitted_date') }
                      = claim.submitted_at_short
                    %td.numeric{ 'data-label': t('.claim_total') }
                      = claim.total_inc_vat
                    - if params[:tab] == 'allocated'
                      %td{ 'data-label': t('.allocated_to') }
                        = claim.case_workers.map(&:name).join(', ')

      - else
        = t('.no_claims_allocated')
