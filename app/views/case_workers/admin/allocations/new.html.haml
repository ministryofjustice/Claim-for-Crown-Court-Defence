- unless params[:tab] == 'allocated'
  %h1.page-title
    Allocation
  %p
    = form_tag case_workers_admin_allocations_path, method: :get, class: 'allocation-filter-form' do
      = label_tag do
        = radio_button_tag :filter, 'all', params[:filter].blank? || params[:filter] == 'all'
        All

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'fixed_fee', params[:filter] == 'fixed_fee'
        Fixed fee

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'cracked', params[:filter] == 'cracked'
        Cracked

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'trial', params[:filter] == 'trial'
        Trial

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'guilty_plea', params[:filter] == 'guilty_plea'
        Guilty plea

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'redetermination', params[:filter] == 'redetermination'
        Redetermination

      != "&nbsp";

      = label_tag do
        = radio_button_tag :filter, 'awaiting_written_reasons', params[:filter] == 'awaiting_written_reasons'
        Awaiting written reasons

      != "&nbsp";

      = hidden_field_tag :high_value, params[:high_value]
      = hidden_field_tag :tab, params[:tab]

      = submit_tag 'Filter'

      != "&nbsp";

      %span.claim-count
        = pluralize(@claims.count, 'claim')
- else
  %h1.page-title
    Re-Allocation
  %p
    = form_tag case_workers_admin_allocations_path, method: :get do
      = hidden_field_tag :high_value, params[:high_value]
      = hidden_field_tag :tab, params[:tab]

      = text_field_tag :search, params[:search], placeholder: 'Search by case worker name'
      = submit_tag 'Search', class: 'button'

%p
  - if params[:high_value].blank? || params[:high_value] == 'false'
    = link_to 'Show only high value claims', case_workers_admin_allocations_path(params.except(:search, :filter,:action, :controller).merge(high_value: true))
  - else
    = link_to 'Show claims for all values', case_workers_admin_allocations_path(params.except(:search, :filter,:action, :controller).merge(high_value: false))

- if @allocated_claims
  = render 'allocated_summary'

= form_for [:case_workers, :admin, @allocation] do |f|
  - if @allocation.errors.any?
    .validation-summary
      %h2.heading-small
        = "#{pluralize(@allocation.errors.count, 'error')}"
        prohibited save
      %ul
        - @allocation.errors.full_messages.each do |msg|
          %li= msg

  %p
    = f.grouped_collection_select :case_worker_id, Location.all, :case_workers, :name, :id, :name, { prompt: 'Select case worker' }, { class: 'select2', style: 'display: inline-block; width: 200px;' }

    - unless params[:tab] == 'allocated'
      = number_field_tag :quantity_to_allocate, nil, { placeholder: params[:tab] == 'allocated' ? 'Number to re-allocate' : 'Number to allocate', min: 0 }

    = f.submit params[:tab] == 'allocated' ? 'Re-allocate' : 'Allocate', class: 'button'

  %table.claims_table
    %thead
      %th
        = link_to 'Select all', '#', class: 'select-all', data: { 'all-checked' => 'false' }
      %th
        Case number
      %th
        Advocate
      %th
        Defendant(s)
      %th
        Type
      %th
        Submission date
      %th
        Value
      - if params[:tab] == 'allocated'
        %th
          Allocated to
    %tbody
      = f.collection_check_boxes :claim_ids, @claims, :id, :case_number do |b|
        - present(b.object) do |claim|
          %tr{id: dom_id(claim)}
            %td
              = b.check_box
            %td
              = b.label do
                = claim.case_number
            %td
              = b.label do
                = claim.advocate.name
            %td
              = b.label do
                = claim.defendant_names
            %td
              = b.label do
                = claim.case_type.name
            %td
              = b.label do
                = claim.submitted_at
            %td
              = b.label do
                = claim.total_inc_vat
            - if params[:tab] == 'allocated'
              %td
                = b.label do
                  = claim.case_workers.map(&:name).join(', ')
