.claim-count
  = "Number of claims: "
  = @claims.total_count
%table.report
  %thead
    %tr
      %th{scope: 'col'}
        = sortable 'case_number', t('.case_number')
      %th{scope: 'col'}
        = sortable 'advocate', t('.advocate')
      %th{scope: 'col'}
        = t(".defendants")
      %th.numerical{ title:  'Including VAT', scope: 'col' }
        = sortable 'total_inc_vat', t('.total')
      - if params[:action] == 'archived'
        %th{scope: 'col'}
          = sortable 'state', t('.status')
      %th{scope: 'col'}
        = sortable 'case_type', t('.case_type')
      %th.numerical{scope: 'col'}
        = sortable 'last_submitted_at', t('.submission_date')
      %th.message-placeholder{scope: 'col'}
        = t('.messages')
  %tbody
    - present_collection(@claims).each do |claim|
      %tr
        %td
          = link_to claim.case_number , case_workers_claim_path(claim),{:class => 'js-test-case-number-link'}
        %td
          = claim.owner_name
        %td
          = claim.defendant_names
        %td.numerical.js-test-total
          = claim.total_inc_vat
        - if params[:action] == 'archived'
          %td
            = claim.state.humanize
        %td
          = claim.case_type_name
        %td.numerical
          = claim.submitted_at(include_time: false) unless claim.draft?
        %td.messages
          - if claim.messages.any?
            = link_to "View", "#{case_workers_claim_path(claim, messages: true)}#messages"
            - if claim.has_unread_messages_for?(current_user)
              %object{:type => 'image/svg+xml', :data => image_path('messaging-red.svg'), :class => "new-message"}
          - else
            %span.none
              = "None"
