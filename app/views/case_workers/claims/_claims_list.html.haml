.container.table-container
  %table.report
    %caption
      %span.table-caption
        = params[:action] == 'archived' ? t('case_workers.table_headings.archived_claims') : t('case_workers.table_headings.your_claims')
      %span.claim-count
        = "Number of claims: "
        = claims.total_count
    %thead
      %tr
        %th{scope:'col'}
          = sortable 'type', t('.type')
        %th{scope: 'col'}
          = sortable 'case_number', t('.case_number')
        %th{scope: 'col'}
          = sortable 'advocate', t('.advocate_litigator')
        %th{scope: 'col'}
          = t(".defendants")
        %th.numeric{ title:  'Including VAT', scope: 'col' }
          = sortable 'total_inc_vat', t('.total')
        - if params[:action] == 'archived'
          %th{scope: 'col'}
            = sortable 'state', t('.status')
        %th{scope: 'col'}
          = sortable 'case_type', t('.case_type')
        %th.numeric{scope: 'col'}
          = sortable 'last_submitted_at', t('.submission_date')
        %th.message-placeholder{scope: 'col'}
          = t('.messages')
    %tbody
      %tr.mobile-sort
        %td{colspan: 10}
          Sort by:
          = sortable 'case_number', t('.case_number')
          = sortable 'advocate', t('.advocate_litigator')
          = sortable 'total_inc_vat', t('.total')
          - if params[:action] == 'archived'
            = sortable 'state', t('.status')
          = sortable 'case_type', t('.case_type')
          = sortable 'last_submitted_at', t('.submission_date')
      - present_collection(claims).each do |claim|
        %tr{ class: claim.injection_error ? 'error injection-error' : nil }
          %td{'aria-label' => t(".type")}
            .error-message-container
              = claim.pretty_type
              - claim.injection_error do |message|
                .error-message
                  = message
          %td{'aria-label' => t(".case_number")}
            = link_to claim.case_number ,
                      case_workers_claim_path(claim),
                      {:class => 'js-test-case-number-link',
                        'aria-label': "View #{claim.state.humanize} Claim, Case number: #{claim.case_number}"}
            %span.unique-id-small
              = claim.unique_id
            - if claim.disk_evidence == true
              %span.disk-evidence
                = "Disk evidence"

          %td{'aria-label' => t(".advocate_litigator")}
            = claim.external_user.name
          %td{'aria-label' => t(".defendants")}
            = claim.defendant_names
          %td.numeric.js-test-total{'aria-label' => t(".total")}
            = claim.total_inc_vat
          - if params[:action] == 'archived'
            %td{'aria-label' => t(".status")}
              %span.state{class: 'state-' << claim.state.dasherize}
                = claim.state.humanize
          %td{'aria-label' => t(".case_type")}
            = claim.case_type_name
            %br/
            %span.claim-state
              = claim.claim_state
          %td.numeric{'aria-label' => t(".submission_date")}
            = claim.submitted_at(include_time: false)
          %td.messages{'aria-label' => t(".messages")}
            - if claim.has_messages?
              - if claim.remote?
                = link_to claim.unread_messages_count > 0 ? "View (#{claim.unread_messages_count} new)" : "View" , "#{case_workers_claim_path(claim, messages: true)}#messages"
              - else
                = link_to claim.has_unread_messages_for?(current_user) ? "View (#{claim.unread_messages_for(current_user).count} new)" : "View" , "#{case_workers_claim_path(claim, messages: true)}#messages"
            - else
              %span.none
                = t(".none")
