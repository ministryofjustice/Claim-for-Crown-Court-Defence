.table-container
  %table.report
    %caption
      .govuk-grid-row
        .govuk-grid-column-one-half
          = params[:action] == 'archived' ? t('case_workers.table_headings.archived_claims') : t('case_workers.table_headings.your_claims')
        .govuk-grid-column-one-half.claim-count
          = t('.number_of_claims')
          = claims.total_count

    %thead
      %tr
        %th{ scope: 'col' }
          = sortable 'type', t('.type'), 'aria-label': t('.type_sort_label'), id: 'type'

        %th{ scope: 'col' }
          = sortable 'case_number', t('.case_number'), 'aria-label': t('.case_number_sort_label'), id: 'case_number'

        %th{ scope: 'col' }
          = sortable 'advocate', t('.advocate_litigator'), 'aria-label': t('.advocate_sort_label'), id: 'advocate'

        %th{ scope: 'col' }
          = t('.defendants')

        %th.numeric{ scope: 'col' }
          = sortable 'total_inc_vat', t('.total'), 'aria-label': t('.total_inc_vat_sort_label'), id: 'total_inc_vat'

        - if params[:action] == 'archived'
          %th{ scope: 'col' }
            = sortable 'state', t('.status'), 'aria-label': t('.state_sort_label'), id: 'state'

        %th{ scope: 'col' }
          = sortable 'case_type', t('.case_type'), 'aria-label': t('.case_type_sort_label'), id: 'case_type'

        %th.numeric{ scope: 'col' }
          = sortable 'last_submitted_at', t('.submission_date'), 'aria-label': t('.last_submitted_at_sort_label'), id: 'last_submitted_at'

        %th.message-placeholder{ scope: 'col' }
          = t('.messages')
    %tbody
      %tr.mobile-sort
        %th{ scope: 'col' }
          Sort by:
          = sortable 'case_number', t('.case_number'), 'aria-label': t('.case_number_sort_label'), id: 'case_number_ms'
          = sortable 'advocate', t('.advocate_litigator'), 'aria-label': t('.advocate_sort_label'), id: 'advocate_ms'
          = sortable 'total_inc_vat', t('.total'), 'aria-label': t('.total_inc_vat_sort_label'), id: 'total_inc_vat_ms'
          - if params[:action] == 'archived'
            = sortable 'state', t('.status'), 'aria-label': t('.state_sort_label'), id: 'state_ms'
          = sortable 'case_type', t('.case_type'), 'aria-label': t('.case_type_sort_label'), id: 'case_type_ms'
          = sortable 'last_submitted_at', t('.submission_date'), 'aria-label': t('.last_submitted_at_sort_label'), id: 'last_submitted_at_ms'
      - present_collection(claims).each do |claim|
        %tr{ class: claim.injection_error ? 'error injection-error' : nil }
          %td
            .error-message-container
              = claim.pretty_type
              - claim.injection_error do |message|
                .error-message
                  = message
          %td
            = govuk_link_to claim.case_number,
                      case_workers_claim_path(claim),
                      class: 'js-test-case-number-link',
                      'aria-label': "View #{claim.state.humanize} Claim, Case number: #{claim.case_number}"

            - if claim.disk_evidence == true
              %span.disk-evidence
                = t('.disk_evidence')

          %td
            = claim.external_user.name
          %td
            = claim.defendant_names
          %td.numeric.js-test-total
            = claim.total_inc_vat
          - if params[:action] == 'archived'
            %td
              = govuk_tag claim.state.humanize, class: "app-tag--#{claim.state.dasherize}"
          %td
            = claim.case_type_name
            %br/
            %span.claim-state
              = claim.claim_state
          %td.numeric
            = claim.submitted_at(include_time: false)
          %td.messages
            - if claim.has_messages?
              - if claim.remote?
                = govuk_link_to claim.unread_messages_count.to_int > 0 ? t('.view_with_messages', message_count: claim.unread_messages_count) : t('.view'), "#{case_workers_claim_path(claim, messages: true)}#messages", 'aria-label': t('.view_messages_label', case_number: claim.case_number)
              - else
                = govuk_link_to claim.unread_messages_for(current_user).any? ? t('.view_with_messages', message_count: claim.unread_messages_for(current_user).count) : t('.view'), "#{case_workers_claim_path(claim, messages: true)}#messages", 'aria-label': t('.view_messages_label', case_number: claim.case_number)
            - else
              %span.none
                = t('.none')
