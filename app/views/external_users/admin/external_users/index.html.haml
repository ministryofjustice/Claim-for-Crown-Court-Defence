= content_for :page_title, flush: true do
  = t(".page_title_#{current_user.provider.provider_type}")

= render partial: 'layouts/header', locals: { page_heading: t('.page_heading', provider_name: "#{current_user.provider.name}") }

= content_for :search_html_block do
  .form-group
    = govuk_link_to t('.new_user'), new_external_users_admin_external_user_path

= render partial: 'shared/search_form', locals: { search_path: external_users_admin_external_users_path(anchor: 'search-button'), hint_text: t('hint.search_users'), button_text: t('search.users') }


= govuk_table_and_caption t('.table_caption', provider_name: "#{current_user.provider.name}"), class: 'govuk-visually-hidden' do

  = govuk_table_thead_collection [t('.last_name'),
  t('.first_name'),
  t('.supplier_number'),
  t('.email'),
  t('.email_confirmation'),
  t('.actions')]

  = govuk_table_tbody do
    - @external_users.each do |advocate|
      = govuk_table_row do
        = govuk_table_td advocate.last_name

        = govuk_table_td advocate.first_name

        = govuk_table_td do
          = advocate.supplier_number ? advocate.supplier_number : '-'

        = govuk_table_td do
          = govuk_mail_to advocate.email, advocate.email, { title: t('.email_title', external_user: advocate.name) }

        = govuk_table_td do
          = advocate.send_email_notification_of_message? ? t('.option_yes') : t('.option_no')

        = govuk_table_td do
          - if advocate.active?
            = govuk_link_to t('.edit_html', context: advocate.name), edit_external_users_admin_external_user_path(advocate)
            = ' | '
            = govuk_link_to t('.delete_html', context: advocate.name), external_users_admin_external_user_path(advocate), method: :delete, data: { confirm: t('.confirmation') }
          - else
            Inactive
