%tr.nested-fields
  - if f.object.calculated?
    = render 'basic_fee_calculated_fields', f: f
  - else
    = render partial: 'basic_fee_uncalculated_fields', locals: { f: f, fee: present(f.object) }

  %td.add-basic-fee-date-attended
    - if f.object.fee_type.has_dates_attended?
      = link_to_add_association t('.add_date_attended'), f, :dates_attended, class: 'button-secondary', data: {'association-insertion-method' => 'after', 'association-insertion-traversal' => 'closest', 'association-insertion-node' => 'tr'}

  = f.hidden_field :fee_type_id, value: f.object.fee_type_id

= f.fields_for :dates_attended do |date_attended|
  - @basic_fee_date_attended_count += 1
  = render 'date_attended_fields', { f: date_attended, submodel_count: @basic_fee_date_attended_count, parent_model_prefix: "basic_fee_#{@basic_fee_count}" }
