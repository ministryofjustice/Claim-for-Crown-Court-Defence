- fee = present(f.object)

.basic-fee-group.fx-fee-group.fee-details.js-block.fx-do-init{ class: to_slug(fee.description), data: { type: 'gradFees', autovat: @claim.apply_vat? ? 'true' : 'false', 'block-type': 'FeeBlock' } }

  = render partial: 'external_users/claims/basic_fees/case_type_display', locals: { claim: @claim }

  = render partial: 'external_users/claims/basic_fees/offence_display', locals: { claim: @claim }

  = f.govuk_text_field :fee_type_id,
    class: 'js-fee-type',
    label: { hidden: true },
    type: 'hidden',
    value: f.object.fee_type_id

  = f.govuk_text_field :quantity,
    class: 'js-fee-calculator-days',
    form_group: { classes: 'govuk-visually-hidden' },
    label: { text: 'Fee calculator days' },
    readonly: true,
    tabindex: -1,
    value: 1,
    width: 'one-quarter'

  = f.govuk_text_field :rate,
    class: 'total fee-amount',
    form_group: { classes: 'js-graduated-price-effectee calculated-grad-fee' },
    label: { text: t('.net_amount_html', context: f.object.description) },
    prefix_text: 'Â£',
    value: number_with_precision(f.object.rate, precision: 2),
    width: 'one-quarter'

  = f.govuk_text_field :price_calculated,
    form_group: { classes: 'js-fee-calculator-success' },
    label: { hidden: true },
    type: 'hidden',
    value: f.object.price_calculated?

  = govuk_detail t('.help_with_basic_fees.title') do
    - if fee.claim.agfs_reform?
      = t('.help_with_basic_fees.post_agfs_reform_html')
    - else
      = t('.help_with_basic_fees.pre_agfs_reform_html')

    = t('.help_with_basic_fees.how_is_this_rate_calculated_html')

  = render partial: 'external_users/claims/basic_fees/first_date_display', locals: { fee: fee }

  = render partial: 'external_users/claims/basic_fees/dates_attended', locals: { f: f, fee: fee }
