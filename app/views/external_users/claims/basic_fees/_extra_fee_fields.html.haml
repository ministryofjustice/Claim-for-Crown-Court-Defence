- fee = present(f.object)
- locale_scope = "external_users.claims.basic_fees.extra_fee_fields.#{fee.fee_type_code.downcase}"

%h3.govuk-heading-m
  = t('heading_html', scope: locale_scope)

- if fee.display_help_text?
  %p
    = t('help_text', scope: locale_scope)

.form-group
  / .js-block is conditional
  - classes = to_slug(f.object.description) + ' ' + (fee.activate_js_block? ? 'js-block fx-do-init' : '')
  .basic-fee-group.fx-fee-group.fee-details{ class: classes, data:{type:'gradFees', autovat: @claim.apply_vat? ? 'true' : 'false', 'block-type': f.object.calculated? ? 'FeeBlockCalculator' : 'FeeBlock'}}

    = f.hidden_field :fee_type_id, value: f.object.fee_type_id, class: 'js-fee-type'

    = f.adp_text_field :quantity,
      label: t('quantity', scope: locale_scope),
      input_classes: "quantity form-control-1-4 #{fee.fee_calc_class}",
      hint_text: t('quantity_hint', scope: locale_scope),
      input_type: 'number',
      value: fee.quantity,
      errors: @error_presenter

    - if fee.display_amount?
      .js-graduated-price-effectee
        .calculated-grad-fee
        = f.adp_text_field :amount,
          label: t('.net_amount_html', context: f.object.description),
          input_disabled: f.object.calculated? ? true : false,
          input_classes:'total fee-amount form-input-denote__input form-control-1-4',
          value: number_with_precision(f.object.amount, precision: 2),
          input_type: 'currency',
          errors: @error_presenter

    .js-fee-calculator-success
      = f.hidden_field :price_calculated, value: f.object.price_calculated?

    .fee-calc-help-wrapper.form-group.hidden
      = govuk_detail t('.help_how_we_calculate_rate_title') do
        = t('.help_how_we_calculate_rate_body')
