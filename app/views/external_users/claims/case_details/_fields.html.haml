%h2.bold-medium
  = t('.case_advocate_offence')

%fieldset

  - if @claim.agfs?
    %legend.xsmall
      = f.anchored_without_label t('.advocate_category')
      = t('.advocate_category')
    .form-group.inline
      = f.collection_radio_buttons(:advocate_category, Settings.advocate_categories.sort, :to_s, :to_s) do |b|
        - b.label(class: "block-label") { b.radio_button + b.value.to_s }
      = validation_error_message(@error_presenter, :advocate_category)

%fieldset
  .form-group
    - if current_user.persona.admin?
      - label = @claim.agfs? ? t('.advocate') : t('.litigator')
      - external_users_collection = @claim.agfs? ? @advocates_in_provider : @litigators_in_provider
      = render partial: 'external_users/claims/case_details/case_owner_select', locals: { f: f, label: label, external_users_collection: external_users_collection }

    .form-row
      .form-col
        = f.anchored_label t('.case_type'), 'case_type_id_autocomplete'
        .form-hint.xsmall.zero-vert-margin
          = "eg Trial"
        = f.select :case_type_id, @case_types.map{ |ct| [ct.name, ct.id, {data: {'is-fixed-fee' => ct.is_fixed_fee?}}] }, { include_blank: true }, { class: 'autocomplete' }
        = validation_error_message(@error_presenter, :case_type)

    .form-row
      .form-col
        = f.anchored_label t('.court'), 'court_id_autocomplete'
        .form-hint.xsmall.zero-vert-margin
          = "eg Cardiff"
        = f.collection_select :court_id, Court.alphabetical, :id, :name, { include_blank: true }, { class: 'autocomplete' }
        = validation_error_message(@error_presenter, :court)

      .form-col
        = f.adp_text_field :case_number, label: t('.case_number'), hint_text: 'eg A12345678', errors: @error_presenter

    .form-row
      .form-col
        = f.anchored_label t('.transfer_court'), 'transfer_court_id_autocomplete'
        .form-hint.xsmall.zero-vert-margin
          = "eg Cardiff"
        = f.collection_select :transfer_court_id, Court.alphabetical, :id, :name, { include_blank: true }, { class: 'autocomplete' }
        = validation_error_message(@error_presenter, :transfer_court)

      .form-col.form-col-two-thirds
        = f.adp_text_field :transfer_case_number, label: t('.transfer_case_number'), hint_text: 'eg A12345678', input_classes: 'medium-input',  errors: @error_presenter


- if @claim.agfs?
  = render partial: 'external_users/claims/case_details/cracked_trial_fields', locals: { f: f }
  = render partial: 'external_users/claims/case_details/trial_detail_fields', locals: { f: f }
  = render partial: 'external_users/claims/case_details/retrial_detail_fields', locals: { f: f }

  #offence
    .form-row
      .form-col.form-col-one-half
        = f.anchored_label t('.offence_category'), 'offence_category_description_autocomplete'
        .form-hint.xsmall.zero-vert-margin
          = "If the offence category is not listed, choose \"Miscellaneous/other\""
        - if @claim.new_record?
          - selected_offence_category = params[:offence_category].present? ? params[:offence_category][:description] : nil
        - else
          - selected_offence_category = @claim.offence.description rescue nil

        = collection_select :offence_category, :description, @offence_descriptions, :description, :description, { include_blank: true, prompt: true, selected: selected_offence_category }, { class: 'form-control autocomplete' }

        = validation_error_message(@error_presenter, :offence)

      .form-col
        .offence-class-select
          = render partial: 'external_users/claims/case_details/offence_select', locals: { offences: @offences }
        = f.hidden_field :offence_id

- unless @claim.agfs?
  .form-row
    .form-col.form-col-two-thirds
      = render partial: 'external_users/claims/case_details/offence_id_select', locals: { f: f }

  - unless @claim.interim?
    .form-row
      .form-col.form-col-two-thirds.case-concluded-date
        = render partial: 'external_users/claims/case_details/case_concluded_date', locals: { f: f }
