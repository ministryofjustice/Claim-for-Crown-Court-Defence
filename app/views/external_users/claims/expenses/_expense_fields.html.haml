- @expense_count += 1
.expense-group.nested-fields
  %fieldset
    %legend
      = "Expense"
      %span.js-expense-count
        = " #{@expense_count}"
    .form-row
      .form-col{class: "expense_#{@expense_count}_date"}
        = f.gov_uk_date_field(:date, legend_text: 'Date of expenses', legend_class: 'govuk-legend', placeholders: true)
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_date")

    .form-row
      .form-col{class: "expense_#{@expense_count}_expense_type"}
        = f.label :expense_type_id, 'Expense type'
        - expense_types_collection = present_collection(ExpenseType.for_claim_type(@claim))
        = f.select :expense_type_id, options_for_select(expense_types_collection.map {|et| [et.name, et.id, { data: et.data_attributes }]}), {prompt: true}, {class: 'form-control js-expense-type'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_expense_type")

      .form-col{class: "expense_#{@expense_count}_location js-expense-location"}
        = f.label :location, 'Destination'
        = f.text_field :location, {class: 'form-control'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_location")

      .form-col{class: "expense_#{@expense_count}_distance js-expense-distance"}
        = f.label :distance, 'Distance (in miles)'
        = f.number_field :distance, {class: 'form-control'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_distance")

    .form-row
      .form-col{class: "expense_#{@expense_count}_reason_id js-expense-reason"}
        = f.label :reason_id, 'Reason for travel'
        -# (hardcoded for now, dependent on chosen Expense Type):
        = f.collection_select :reason_id, ExpenseType::REASON_SET_A.values, :id, :reason, {prompt: true}, { disabled: false , class: 'form-control'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_reason_id")

      .form-col{class: "expense_#{@expense_count}_reason_text js-expense-reason-text"}
        = f.label :reason_text, 'Reason text'
        -#  (only will show when selected Reason is Other):
        = f.text_field :reason_text, {class: 'form-control'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_reason_text")

    .form-row{class: 'js-expense-mileage'}
      %fieldset{class: "expense_#{@expense_count}_mileage_rate_id inline"}
        %legend
          ='Cost'
        -#  (only visible for Car Travel):
        = f.collection_radio_buttons(:mileage_rate_id, Expense::MILEAGE_RATES.values, :id, :description) do |b|
          - b.label(class: "block-label") { b.radio_button + b.object.description }

    .form-row
      .form-col{class: "expense_#{@expense_count}_hours js-expense-hours"}
        = f.label :hours, 'Number of hours'
        = f.number_field :hours, {class: 'form-control'}
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_hours")

      .form-col{class: "expense_#{@expense_count}_amount js-expense-amount"}
        = f.label :amount, 'Amount'
        .pound-wrapper
          = f.label :amount, 'Â£', class: 'pound-sign bold-xsmall'
          = f.text_field :amount, value: number_with_precision(f.object.amount, precision: 2), class: 'amount', size: 10, maxlength: 8
        = validation_error_message(@error_presenter, "expense_#{@expense_count}_amount")

    .remove-expense
      = link_to_remove_association t('.remove'), f, { wrapper_class: 'expense-group' } if @expense_count > 1
