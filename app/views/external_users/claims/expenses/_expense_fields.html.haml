- @expense_count += 1
.expense-group.nested-fields.js-block.fx-do-init.fx-numberedList-item{data:{"type": "expenses", autovat: @claim.agfs? && @claim.apply_vat? ? "true" : "false", "block-type": "ExpenseBlock"}}
  .form-section-compound

    = f.hidden_field :location_type, {class: 'fx-location-type'}
    = f.hidden_field :calculated_distance, {class: 'fx-travel-calculated-distance'}

    %h3.heading-medium
      = t('.expense')
      %span.fx-numberedList-number
      %span.fx-remove-link
        = link_to_remove_association t('.remove').html_safe , f, wrapper_class: 'expense-group', class: "header-action fx-numberedList-action", style: "display: none;"


    %p.fx-general-errors{:style => "display: none;"}
      %span

    .grid-row
      .column-half
        -# SELECT: Expense types
        .form-group.fx-travel-expense-type
          %fieldset
            %legend.form-label-bold{:for => "expense-type"}
              = t('.type_of_expense')

            - expense_types_collection = present_collection(ExpenseType.for_claim_type(@claim))
            = f.select :expense_type_id, expense_types_collection.map {|et| [et.name, et.id, { data: et.data_attributes }]}, {include_blank: t('.select_option')}, {class: 'form-control form-control-3-4'}
            = validation_error_message(@error_presenter, "expense_#{@expense_count}_expense_type")

      .column-half
        -# SELECT: Travel reasons
        - error_classes = error_class?(@error_presenter, "expense_#{@expense_count}_reason_id")
        - error_classes += ' form-group-error' if error_classes.present?
        .form-group.fx-travel-reason{:style => "display: none;", class: error_classes }
          %fieldset
            %legend.form-label-bold
              = t('.travel_reason')
              %a{id: "expense_#{@expense_count}_reason_id"}
          = validation_error_message(@error_presenter, "expense_#{@expense_count}_reason_id")
          - reasons_collection = present_collection(reasonset_for_expense_type(f.object.expense_type).values, TravelReasonPresenter)
          = f.select :reason_id, reasons_collection.map {|et| [et.reason, et.id, { data: et.data_attributes }]}, {include_blank: t('.select_option')}, {class: 'form-control form-control-3-4'}

        -# INPUT: Other travel reason input
        .form-group.fx-travel-reason-other{style: f.object.reason_id.eql?(5) ? "display: block;" : "display: none;" }
          - present(f.object) do |expense|
            = f.adp_text_field :reason_text, label: t('.reason_text'), input_classes:'', errors: @error_presenter

    .grid-row
      .column-half
        -# INPUT: Location
        .fx-travel-location{:style => "display: none;"}

          - if @claim.lgfs?
            - error_classes = error_class?(@error_presenter, "expense_#{@expense_count}_location")
            - error_classes += ' form-group-error' if error_classes.present?
            .form-group.fx-establishment-select.has-select{:style => "display: none;", class: error_classes}
              %a{:id => "expense_#{@expense_count}_location"}
              = f.label :location, nil, class: "form-label-bold", for: "expense_#{@expense_count}_location"
              = validation_error_message(@error_presenter, "expense_#{@expense_count}_location")
              = f.select :location, {}, {}, { class: "form-control form-control-3-4", :autocomplete => "off" }

          = f.adp_text_field :location, label: t('.location'), input_classes:'form-control-3-4 fx-location-model', errors: @error_presenter

      .column-half
        -# INPUT: Travel hours
        .form-group.fx-travel-hours{:style => "display: none;"}
          = f.adp_text_field :hours, label: t('.hours'), input_classes:'form-control-1-8', input_type: 'number', errors: @error_presenter


        -# INPUT: Travel Distance
        .form-group-compound.fx-travel-distance{:style => "display: none;"}
          = f.adp_text_field :distance, label: t('.distance'), hint_text: t('.distance_hint'), input_type: 'number', input_classes: 'form-control-1-4', value: number_with_precision(f.object.distance, precision: 0), errors: @error_presenter
          - if @claim.lgfs?
            %details
              %summary{"aria-controls" => "distance-summary"}
                %span.summary
                  = t('.summary_heading')
              #distance-summary.panel.panel-border-narrow
                %p
                  = t('.summary_content')

    .grid-row
      .column-half
        -# RADIOS: Cost per mile
        .form-group.fx-travel-mileage{:style => "display: none;"}
          %fieldset
            %legend.form-label-bold
              = t('.cost')

            -# Bike before Car.. due to hidden inputs
            %div.fx-travel-mileage-bike
              = f.collection_radio_buttons(:mileage_rate_id, Expense::BIKE_MILEAGE_RATES.values, :id, :description) do |b|
                .multiple-choice
                  = b.radio_button
                  = b.label { b.object.description }
              = validation_error_message(@error_presenter, "expense_#{@expense_count}_mileage_rate_id")

            %div.fx-travel-mileage-car
              = f.collection_radio_buttons(:mileage_rate_id, Expense::CAR_MILEAGE_RATES.values, :id, :description) do |b|
                .multiple-choice
                  = b.radio_button
                  = b.label { b.object.description }
              = validation_error_message(@error_presenter, "expense_#{@expense_count}_mileage_rate_id")


      .column-half
        -# DATES: Expense date
        .form-group.fx-travel-date{:style => "display: none;"}
          = f.gov_uk_date_field :date,
            legend_text: t('.date'),
            form_hint_text: t('.date_hint'),
            legend_class: 'govuk-legend',
            id: "expense_#{@expense_count}_date",
            error_messages: gov_uk_date_field_error_messages(@error_presenter, "expense_#{@expense_count}_date")

    .grid-row
      .column-half
        -# INPUT: Net amount
        .form-group.fx-travel-net-amount{:style => "display: none;"}
          = f.adp_text_field :amount,
                            label: t('.net_amount'),
                            input_classes:'form-input-denote__input rate',
                            input_type: 'currency',
                            errors: @error_presenter,
                            value: number_with_precision(f.object.amount || 0, precision: 2)

      .column-half
        -# INPUT: VAT amount
        - if @claim.lgfs?
          .form-group.fx-travel-vat-amount{:style => "display: none;"}
            = f.adp_text_field :vat_amount,
                            label: t('.vat_amount'),
                            input_classes:'form-input-denote__input vat',
                            input_type: 'currency',
                            errors: @error_presenter,
                            value: number_with_precision(f.object.vat_amount, precision: 2)

    %hr/
