- if @claim.allows_graduated_fees?
  #graduated-fees
    = f.fields_for :graduated_fee do |ff|
      - fee = present(ff.object)
      .fx-fee-group.graduated-fee-group.js-block.fx-do-init{ data: { 'type': 'gradFees', autovat: @claim.apply_vat? ? 'true' : 'false' } }

        = ff.govuk_text_field :fee_type_id,
          class: 'js-fee-type',
          form_group: { class: 'govuk-visually-hidden' },
          label: { hidden: true },
          type: 'hidden',
          value: @claim.case_type.graduated_fee_type.id

        = ff.govuk_date_field :date,
          legend: { text: t('.first_day_of_trial'), size: 's' },
          hint: { text: t('.date_hint') }

        = f.govuk_number_field :actual_trial_length,
          class: 'js-fee-calculator-days',
          label: { text: t('.actual_trial_length') },
          hint: { text: t('.actual_trial_length_hint') },
          form_group: { class: 'js-fee-calculator-effector' },
          min: 0,
          width: 'one-quarter'

        = ff.govuk_number_field :quantity,
          class: 'quantity fee-quantity js-fee-calculator-ppe',
          form_group: { class: 'js-fee-calculator-effector' },
          label: { text: t('.quantity') },
          min: 0,
          value: fee.quantity,
          width: 'one-quarter'

        = ff.govuk_number_field :amount,
          class: 'total fee-amount',
          form_group: { class: 'calculated-grad-fee js-graduated-price-effectee' },
          label: { text: t('.amount') },
          min: 0,
          prefix_text: 'Â£',
          value: number_with_precision(ff.object.amount, precision: 2),
          width: 'one-quarter'

        = ff.govuk_text_field :price_calculated,
          form_group: { class: 'js-fee-calculator-success govuk-visually-hidden' },
          label: { hidden: true },
          type: 'hidden',
          value: ff.object.price_calculated?

        .fee-calc-help-wrapper.hidden
          = govuk_details(summary_text: t('.help_how_we_calculate_amount_title'), text: t('.help_how_we_calculate_amount_body'))
