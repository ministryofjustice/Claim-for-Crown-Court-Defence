- present(f.object) do |claim|
  #transfer-detail
    = f.anchored_without_label 'transfer_detail'
    - if @error_presenter&.errors_for?(:transfer_detail)
      .dropdown_field_with_errors
        %span.error-message
          = validation_error_message(@error_presenter, :transfer_detail)

    .js-case-conclusion-effectors
      -# input.js-litigator-type
      = f.govuk_collection_radio_buttons :litigator_type,
        ['original','new'],
        :to_s,
        :humanize,
        legend: { text: t('.litigator_type') }

      -# input.js-elected-case
      = f.govuk_collection_radio_buttons :elected_case,
        [['Yes','true'],['No','false']],
        :last,
        :first,
        legend: { text: t('.elected_case') }

      -# div#cc-transfer-stage.js-typeahead select.fx-autocomplete.js-transfer-stage-id
      = f.govuk_collection_select :transfer_stage_id,
        Claim::TransferBrain::TRANSFER_STAGES.values,
        :id,
        :description,
        label: { text: t('.transfer_stage_default_label_text') }

      -# div#transfer_date
      = f.govuk_date_field :transfer_date,
        legend: { text: t('.transfer_date_default_label_text') },
        hint: { text: t('.date_hint') }

    -# div#cc-case-conclusion.js-typeahead.js-case-conclusions-select
    = f.govuk_collection_select :case_conclusion_id,
      claim.case_conclusions,
      :first,
      :last,
      label: { text: t('.case_conclusions') }
