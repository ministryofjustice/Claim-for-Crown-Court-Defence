- present(f.object) do |claim|
  #transfer-detail
    .js-case-conclusion-effectors
      = f.govuk_collection_radio_buttons :litigator_type,
        ['original','new'],
        :to_s,
        :humanize,
        classes: ['js-litigator-type'],
        legend: { text: t('.litigator_type'), size: 's' }

      = f.govuk_collection_radio_buttons :elected_case,
        [['Yes','true'],['No','false']],
        :last,
        :first,
        classes: ['js-elected-case'],
        legend: { text: t('.elected_case'), size: 's' }

      = f.govuk_collection_select :transfer_stage_id,
        Claim::TransferBrain::TRANSFER_STAGES.values,
        :id,
        :description,
        class: 'js-transfer-stage-id',
        form_group: { classes: 'fx-autocomplete-wrapper', id: 'cc-transfer-stage' },
        label: { text: t('.transfer_stage_default_label_text'), class:'js-transfer-stage-label govuk-!-font-weight-bold' },
        options: { include_blank: '' }

      = f.govuk_date_field :transfer_date,
        form_group: { classes: ['js-transfer-date'], id: 'cc-transfer_date' },
        hint: { text: t('.date_hint') },
        legend: { text: t('.transfer_date_default_label_text'), size: 's' }

    - state = claim.conclusion_required? ? '' : 'hidden'

    = f.govuk_collection_select :case_conclusion_id,
      claim.case_conclusions,
      :first,
      :last,
      form_group: { classes: ['fx-autocomplete-wrapper', 'js-case-conclusions-select', "#{state}" ], id: 'cc-case-conclusion' },
      label: { text: t('.case_conclusions'), class: 'govuk-!-font-weight-bold' },
      options: { include_blank: '' }
