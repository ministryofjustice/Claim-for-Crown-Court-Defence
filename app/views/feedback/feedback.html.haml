= content_for :page_title, flush: true do
  = t('.page_title')

= render partial: 'layouts/header', locals: { page_heading: t('.page_heading') }

.govuk-grid-row
  .govuk-grid-column-two-thirds
    = form_for @feedback, builder: GOVUKDesignSystemFormBuilder::FormBuilder, url: feedback_index_path(email: params[:email]), html: { novalidate: 'novalidate' } do |f|
      = f.hidden_field :type
      = f.hidden_field :referrer
      = hidden_field_tag 'ga_client_id', '', class: 'ga-client-id'
      - if params[:user_id].present?
        = hidden_field_tag :user_id, params[:user_id]

      = f.govuk_error_summary

      = govuk_inset_text do
        %p
          = t('.callout')
          = render partial: 'feedback/claim_edit_alert' if referrer_is_claim?(@feedback.referrer)

      = f.govuk_text_area :comment,
        label: { text: t('.comment') },
        hint: { text: t('.comment_hint') }

      = render partial: 'feedback/anonymous_email_prompt', locals: { f: f } if cannot_identify_user?

      = f.govuk_collection_radio_buttons :rating,
        Feedback::RATINGS.map {|k,v| [v,k]},
        :last,
        :first,
        legend: { text: t('.rating') }

      = f.govuk_submit(t('.send'))
