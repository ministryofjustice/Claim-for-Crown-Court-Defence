= form_for [:super_admins, @provider, @external_user] do |f|
  - if @external_user.errors.any?
    .validation-summary
      %h3.heading-small= "#{t('.prohibited_save')} #{pluralize(@external_user.errors.count, t('.error'))}"
      %ul
        - @external_user.errors.full_messages.each do |msg|
          %li= msg

  = f.fields_for :user do |user_fields|
    %fieldset.user-form

      .form-group
        = user_fields.label t(".first_name"), class: "form-label"
        = user_fields.text_field :first_name, class: "form-control"

      .form-group
        = user_fields.label t(".last_name"), class: "form-label"
        = user_fields.text_field :last_name, class: "form-control"

      .form-group
        = user_fields.label t(".email"), class: "form-label"
        = user_fields.email_field :email, class: "form-control"

      .form-group
        = user_fields.label t(".email_confirmation"), class: "form-label"
        = user_fields.email_field :email_confirmation, class: "form-control"

    %fieldset.user-form
      = f.label :roles, class: "form-label"
      .form-group.inline.js-advocate-roles
        = f.collection_check_boxes(:roles, @external_user.available_roles, :to_s, :to_s) do |b|
          .multiple-choice
            = b.check_box
            = b.label { b.value.humanize }

    - if @provider.chamber?
      .js-chamber-advocates-only
        = f.label(:vat_registered, t('.apply_vat'), class: "form-label")
        .form-group.inline
          = f.collection_radio_buttons(:vat_registered, [true, false], :to_s, :to_s) do |b|
            .multiple-choice
              = b.radio_button
              = b.label { (b.value.to_s == 'true' ? 'Yes' : 'No') }

        .form-group
          = f.label t(".supplier_number"), class: "form-label"
          = f.text_field :supplier_number, class: "form-control"

    = f.submit t('.submit'), class: "button"
