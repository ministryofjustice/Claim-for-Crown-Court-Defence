#provider-form
  = form_for [:super_admins, @provider], builder: AdpFormBuilder, html: { novalidate: true } do |f|

    - if @provider.errors.any?
      .error-summary{:role => "group", "aria-labelledby" => "error-summary-heading-example-1", :tabindex => "-1"}

        %h1.heading-medium.error-summary-heading#error-summary-heading-example-1
          = "#{t('.prohibited_save')} #{pluralize(@provider.errors.count, t('.error'))}"

        %ul.error-summary-list
          - @provider.errors.each do |attribute, message|
            %li
              = link_to ['#provider_', attribute].join do
                = message

    .form-row
      .form-col{class: @provider.errors[:name].any? ? "error" : ""}
        = f.adp_text_field :name, label: t('.provider_name')

    .form-group#js-provider-type.jqr-delegate-hook{class: @provider.errors[:provider_type].any? ? "error" : ""}
      %fieldset.inline#provider_provider_type
        %legend
          %span.form-label-bold
            = t('.provider_type')

        = f.collection_radio_buttons(:provider_type, Provider::PROVIDER_TYPES, :to_s, :to_s) do |b|
          - b.label(class: 'block-label') { b.radio_button(class: "jqr-publisher",  "data-jqr-publish-events": "/provider/type/") + b.value.capitalize }

    .form-group#js-fee-schemes.jqr-delegate-hook.jqr-subscriber{"data-jqr-subscribe-events": "/provider/type/", "data-jqr-subscribe-values": "chamber|firm", class: @provider.errors[:roles].any? ? "error" : ""}
      %fieldset.inline#provider_roles
        %legend
          %span.form-label-bold
            = t('.fee_schemes')


        = f.collection_check_boxes(:roles, Provider::ROLES, :to_s, :to_s) do |b|
          -# conditionally apply the correct subscribe and publish strings
          - jqr_subscribe_values = b.value.upcase == "AGFS" ? "chamber|firm" : "firm"
          - jqr_publish_events = "/scheme/type/" + b.value + "/"

          - b.label(class: 'block-label jqr-subscriber', "data-jqr-subscribe-events": "/provider/type/", "data-jqr-subscribe-values": jqr_subscribe_values) { b.check_box(class: "jqr-publisher",  "data-jqr-publish-events": jqr_publish_events) + b.value.upcase }


    .form-group#js-agfs-supplier-number.jqr-subscriber{"data-jqr-subscribe-events": "/scheme/type/agfs/custom/", "data-jqr-subscribe-values": "show-agfs-supplier", class: @provider.errors[:firm_agfs_supplier_number].any? ? "error" : ""}
      = f.adp_text_field :firm_agfs_supplier_number, label: t('.agfs_supplier_number')

    .form-group#js-lgfs-supplier-numbers.jqr-subscriber{"data-jqr-subscribe-events": "/scheme/type/lgfs/", class: @provider.errors[:firm_lgfs_supplier_number].any? ? "error" : ""}
      = render 'shared/supplier_numbers', f: f

    .form-group#js-vat.jqr-subscriber{"data-jqr-subscribe-events": "/scheme/type/lgfs/"}
      %fieldset.inline
        %legend
          %span.form-label-bold
            = t('.vat_registered')

        = f.collection_radio_buttons(:vat_registered, [true, false], :to_s, :to_s) do |b|
          - b.label(class: 'block-label') { b.radio_button + (b.value.to_s == 'true' ? 'Yes' : 'No') }

    .form-group
      = f.submit 'Save', class: "button"