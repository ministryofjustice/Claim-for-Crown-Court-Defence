#provider-form
  = form_for [:super_admins, @provider], html: { novalidate: true } do |f|

    - if @provider.errors.any?
      .validation-summary
        %h2.heading-small= "#{t('.prohibited_save')} #{pluralize(@provider.errors.count, t('.error'))}"
        %ul
          - @provider.errors.full_messages.each do |message|
            %li
              = message
        %span.form-hint
          = t('.form_error_hint')
    %fieldset.user-form
      #js-provider-type
        = f.label :provider_type, t('.provider_type'), class: "form-label"
        %div.form-group.inline
          =f.collection_radio_buttons(:provider_type, Provider::PROVIDER_TYPES, :to_s, :to_s) do |b|
            - b.label(class: 'block-label') { b.radio_button(disabled: @provider.persisted?) + b.value.capitalize }
        = validation_error_message(@provider, :provider_type)

        = f.label :roles, t('.fee_schemes'), class: "form-label"
        %div.form-group.inline
          =f.collection_check_boxes(:roles, Provider::ROLES, :to_s, :to_s) do |b|
            - b.label(class: 'block-label') { b.check_box + b.value.upcase }

      #js-provider-name
        = f.label t('.provider_name'), class: "form-label"
        = f.text_field :name, class: "form-control"
        = validation_error_message(@provider, :name)

      #js-supplier-number
        = f.label t('.supplier_number'), class: "form-label"
        = f.text_field :supplier_number, class: "form-control"
        = validation_error_message(@provider, :supplier_number)

      #js-supplier-numbers
        = render 'shared/supplier_numbers', f: f

      #js-vat-registered
        = f.label :vat_registered, t('.vat_registered'), class: "form-label"
        %div.form-group.inline
          =f.collection_radio_buttons(:vat_registered, [true, false], :to_s, :to_s) do |b|
            - b.label(class: 'block-label') { b.radio_button + (b.value.to_s == 'true' ? 'Yes' : 'No') }

    %p
      = f.submit 'Save', class: "button"
