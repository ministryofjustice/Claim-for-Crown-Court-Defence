module DemoData

  #
  # ClaimDestroyer:
  #
  # WARNING: destroys sample providers which CASCADES to users and ALL their claims
  # - find and destroys providers matching the hard coded sample users in external user seeds
  # - find and destroys any providers that have a name indicating they were created by the provider factory
  #   namely, those matching a regex equating to "(Test-Provider-#{n})" where n is a sequence number.
  #
  class ClaimDestroyer

    SAMPLE_PROVIDERS = ['Test chamber','Test firm A','Test firm B']

    # find providers with name generated by factory
    # NOTE uses POSIX regex compliant postgres dependant operator ~
    def self.find_test_providers
      Provider.where("name ~ ?",'\s\([Tt]est-[Pp]rovider-\d+\)')
    end

    def run
      SAMPLE_PROVIDERS.each do |name|
        provider = Provider.find_by(name: name)
        if provider.nil?
          puts "WARNING: provider #{name} NOT FOUND. Consider changing the #{self.class}::SAMPLE_PROVIDERS constant if this is unexpected"
        else
          puts "provider \"#{provider.destroy.name}\" DESTROYED"
        end
      end

      test_providers = self.class.find_test_providers
      test_providers.each do |provider|
        p = provider.destroy
        puts "#{p.name} DESTROYED"
      end
    end

  end
end
